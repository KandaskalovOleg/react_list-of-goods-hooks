{"version":3,"sources":["App.tsx","components/button.tsx","index.tsx"],"names":["SortBy","Button","className","children","props","type","goodsFromServer","App","useState","Default","sortBy","setSortBy","isReverse","setIsReverse","goods","sortedGoods","reverse","sort","good1","good2","Abc","localeCompare","Length","length","getPreparedGoods","cn","onClick","setIsRevers","setReverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,oHCVQC,EAA0B,SAAC,GAAD,IACrCC,EADqC,EACrCA,UACAC,EAFqC,EAErCA,SACGC,EAHkC,wBAKrC,gDACEC,KAAK,SACLH,UAAS,UAAKA,IACVE,GAHN,aAKGD,MDbQG,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGN,K,UAAAA,E,gBAAAA,E,YAAAA,M,KAkDE,IAAMO,EAAgB,WAC3B,MAA4BC,mBAASR,EAAOS,SAA5C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACMC,EA1CR,SACEA,EADF,GAMa,IAHTJ,EAGQ,EAHRA,OACAE,EAEQ,EAFRA,UAGIG,EAAW,YAAOD,GAClBE,EAAUJ,EAqBhB,OAnBIF,GACFK,EAAYE,MAAK,SAACC,EAAOC,GACvB,OAAQT,GACN,KAAKV,EAAOoB,IACV,OAAOF,EAAMG,cAAcF,GAE7B,KAAKnB,EAAOsB,OACV,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXP,GACFD,EAAYC,UAGPD,EAaOS,CAAiBlB,EAAiB,CAAEI,SAAQE,cAO1D,OACE,sBAAKV,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACEA,UAAWuB,IAAG,SAAU,UACtB,CAAE,WAAYf,IAAWV,EAAOoB,MAClCM,QAAS,kBAAMf,EAAUX,EAAOoB,MAHlC,iCAQA,cAAC,EAAD,CACElB,UAAWuB,IAAG,SAAU,aACtB,CAAE,WAAYf,IAAWV,EAAOsB,SAClCI,QAAS,kBAAMf,EAAUX,EAAOsB,SAHlC,4BAQA,cAAC,EAAD,CACEpB,UAAWuB,IAAG,SAAU,aACtB,CAAE,YAA0B,IAAdb,IAChBc,QAAS,kBAvCnB,SACEd,EACAe,GAEA,OAA6BA,GAAR,IAAdf,GAmCgBgB,CAAWhB,EAAWC,IAHvC,sBAQEH,GAAUE,IACV,cAAC,EAAD,CACEV,UAAU,4BACVwB,QAnCW,WACnBb,GAAa,GACbF,EAAUX,EAAOS,UA+BX,sBAUJ,6BACGK,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YEpHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.543a6f92.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { Button } from './components/button';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  Abc = 'abc',\n  Length = 'length',\n  Default = '',\n}\n\ntype SortOptions = {\n  sortBy: string,\n  isReverse: boolean,\n};\n\nfunction getPreparedGoods(\n  goods: string[],\n  {\n    sortBy,\n    isReverse,\n  }: SortOptions,\n): string[] {\n  const sortedGoods = [...goods];\n  const reverse = isReverse;\n\n  if (sortBy) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortBy.Abc:\n          return good1.localeCompare(good2);\n\n        case SortBy.Length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nfunction setReverse(\n  isReverse: boolean,\n  setIsRevers: React.Dispatch<React.SetStateAction<boolean>>,\n): void {\n  return isReverse === false ? setIsRevers(true) : setIsRevers(false);\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState(SortBy.Default);\n  const [isReverse, setIsReverse] = useState(false);\n  const goods = getPreparedGoods(goodsFromServer, { sortBy, isReverse });\n\n  const resetSorting = () => {\n    setIsReverse(false);\n    setSortBy(SortBy.Default);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <Button\n          className={cn('button', 'is-info',\n            { 'is-light': sortBy !== SortBy.Abc })}\n          onClick={() => setSortBy(SortBy.Abc)}\n        >\n          Sort alphabetically\n        </Button>\n\n        <Button\n          className={cn('button', 'is-success',\n            { 'is-light': sortBy !== SortBy.Length })}\n          onClick={() => setSortBy(SortBy.Length)}\n        >\n          Sort by length\n        </Button>\n\n        <Button\n          className={cn('button', 'is-warning',\n            { 'is-light': isReverse === false })}\n          onClick={() => setReverse(isReverse, setIsReverse)}\n        >\n          Reverse\n        </Button>\n\n        {(sortBy || isReverse) && (\n          <Button\n            className=\"button is-danger is-light\"\n            onClick={resetSorting}\n          >\n            Reset\n          </Button>\n        )}\n\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  className: string,\n  children: string,\n  // eslint-disable-next-line\n  [key: string]: any,\n};\n\nexport const Button: React.FC<Props> = ({\n  className,\n  children,\n  ...props\n}) => (\n  <button\n    type=\"button\"\n    className={`${className}`}\n    {...props}\n  >\n    {children}\n  </button>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}